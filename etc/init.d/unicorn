#! /bin/sh
### BEGIN INIT INFO
# Provides:          unicorn
# Required-Start:    $remote_fs $syslog
# Required-Stop:     $remote_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Unicorn initscript
# Description:       This file should be used to construct scripts to be
#                    placed in /etc/init.d.
### END INIT INFO

# Author: Pavel Mironov <pavel.mironov@tfih.ru>

NAME="unicorn"
SCRIPTNAME="/etc/init.d/$NAME"
CONFIG_DIR="/etc/unicorn/enabled"
START_SCRIPT="/etc/unicorn/init/unicorn_start.sh"

# Do NOT "set -e"

start_app()
{
	CONFIG="$CONFIG_DIR/$1"
	. $CONFIG > /dev/null
	if [ -f $app_path/tmp/pids/unicorn.pid ] ; then
		echo "$1 already started"
	else
		echo "Starting $1..."
		start-stop-daemon --quiet -x $START_SCRIPT -c $user:$group -d $app_path -v --start $rails_env > /dev/null
		if [ $? -eq 0 ] ; then
			echo "\tOK"
		else
			echo "\tError"
		fi
	fi
}

stop_app()
{
	CONFIG="$CONFIG_DIR/$1"
	. $CONFIG
	USER_HOME=$(getent passwd $user | cut -d: -f6)
	echo "Stopping $1..."
	start-stop-daemon --retry 5 -p $app_path/tmp/pids/unicorn.pid --stop
	if [ $? -eq 0 ] ; then
		echo "\tOK"
	else
		echo "\tError"
	fi
}

do_start()
{
	if [ $1 ] ; then
		start_app $1
	else
		for CONFIG in $(ls $CONFIG_DIR)
		do
			start_app $CONFIG
		done
	fi
}

do_stop()
{
	if [ $1 ] ; then
		stop_app $1
	else
		for CONFIG in $(ls $CONFIG_DIR)
		do
			stop_app $CONFIG
		done
	fi
	return 0
}

do_status()
{
	return 0
}

do_list()
{
    for CONFIG in $(ls $CONFIG_DIR)
    do
        echo "- $CONFIG"
    done
}

case $1 in
	start)
		if [ -n "$2" ] ; then
			do_start $2
		else
			do_start
		fi
		;;
	stop)
		if [ -n "$2" ] ; then
			do_stop $2
		else
			do_stop
		fi
		;;
	restart)
		if [ -n "$2" ] ; then
			do_stop $2
			do_start $2
		else
			do_stop
			do_start
		fi
		;;
	status)
		if [ -n "$2" ] ; then
			do_status $2
		else
			do_status
		fi
		;;
    list)
        do_list
        ;;
	*)
		echo "Usage: $SCRIPTNAME {start|stop|status|restart}" >&2
		exit 3
		;;
esac
